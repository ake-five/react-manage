{"version":3,"file":"react-manage/static/js/221.7fb81dc9.chunk.js","mappings":"4KAKA,MA8EA,EA9EcA,KACV,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAEzCO,EAAAA,EAAAA,YAAU,KAGuBC,WAEzB,MAQMC,EAAO,GAEb,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,IACrBD,EAAKE,KAAK,CACNC,IAAI,GAADC,OAAKH,EAAI,GACZI,GAAIJ,EAAI,EACRK,KAAM,WAAaL,EACnBM,IAAK,IAAMN,IAInBR,EAnBuB,CACnB,CAAEe,MAAO,eAAMC,UAAW,KAAMN,IAAK,KAAMO,MAAO,KAClD,CAAEF,MAAO,eAAMC,UAAW,OAAQN,IAAK,QACvC,CAAEK,MAAO,eAAMC,UAAW,MAAON,IAAK,SAiB1Cb,EAAaU,EAAK,EAGtBW,EAAsB,GACvB,IAEH,MAAMC,EAAmBA,CAACC,EAAMC,KAC5BnB,EAAekB,GACfhB,EAAYiB,EAAK,EAGfC,GAAcrB,EAAc,GAAKE,EACjCoB,EAAWD,EAAanB,EACxBqB,EAAgB5B,EAAU6B,MAAMH,EAAYC,GAElD,OACIG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEV,MAAO,OAAQW,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWC,SAAA,EAC1FC,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEV,MAAO,OAAQgB,OAAQ,OAAQC,UAAW,SAAUC,UAAW,QAASJ,SAAC,0CAGvFC,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACFT,MAAO,CAAEV,MAAO,QAChBlB,QAASA,EACTsC,WAAYb,EACZc,YAAY,EACZC,OAAQ,CAAEC,EAAG,KACbC,QAASA,KACLT,EAAAA,EAAAA,KAACI,EAAAA,EAAMM,QAAO,CAAAX,UACVC,EAAAA,EAAAA,KAACI,EAAAA,EAAMM,QAAQC,IAAG,CAAAZ,UAGdC,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CACPC,QAAS5C,EACTE,SAAUA,EACV2C,MAAOlD,EAAUmD,OACjBC,SAAU7B,EACVQ,MAAO,CAAEsB,OAAQ,OAAQf,UAAW,oBAOtD,C","sources":["pages/coms/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Pagination } from 'antd';\nimport { Header } from 'antd/es/layout/layout';\n\n\nconst About = () => {\n    const [tableData, setTableData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n\n    useEffect(() => {\n        // 模拟从后端获取动态表头和数据的异步操作\n        // 实际应用中，你需要替换下面的模拟数据为从后端获取的数据\n        const fetchDataFromBackend = async () => {\n            // 模拟从后端获取的动态表头数据\n            const dynamicColumns = [\n                { title: '序号', dataIndex: 'id', key: 'id', width: 500 },\n                { title: '名字', dataIndex: 'name', key: 'name' },\n                { title: '年纪', dataIndex: 'age', key: 'age' },\n                // Add more dynamic columns as needed\n            ];\n\n            // 生成100条数据的数组\n            const data = [];\n\n            for (let i = 0; i < 100; i++) {\n                data.push({\n                    key: `${i + 1}`,\n                    id: i + 1,\n                    name: 'John Doe' + i,\n                    age: 121 + i,\n                });\n            }\n\n            setColumns(dynamicColumns);\n            setTableData(data);\n        };\n\n        fetchDataFromBackend();\n    }, []);\n\n    const handlePageChange = (page, size) => {\n        setCurrentPage(page);\n        setPageSize(size)\n    };\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedData = tableData.slice(startIndex, endIndex);\n\n    return (\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <div style={{ width: '100%', height: '40px', textAlign: 'center', linHeight: '40px' }}>\n                动态渲染表格\n            </div>\n            <Table\n                style={{ width: '100%' }}\n                columns={columns}\n                dataSource={paginatedData}\n                pagination={false} // 禁用表格自带的分页器\n                scroll={{ y: 600 }}\n                summary={() => (\n                    <Table.Summary>\n                        <Table.Summary.Row>\n                            {/* <Table.Summary.Cell index={0}></Table.Summary.Cell>\n                            <Table.Summary.Cell index={1}></Table.Summary.Cell> */}\n                            <Pagination\n                                current={currentPage}\n                                pageSize={pageSize}\n                                total={tableData.length}\n                                onChange={handlePageChange}\n                                style={{ margin: '10px', textAlign: 'center' }}\n                            />\n                        </Table.Summary.Row>\n                    </Table.Summary>\n\n                )}\n            />\n        </div>\n    );\n};\n\nexport default About;"],"names":["About","tableData","setTableData","useState","columns","setColumns","currentPage","setCurrentPage","pageSize","setPageSize","useEffect","async","data","i","push","key","concat","id","name","age","title","dataIndex","width","fetchDataFromBackend","handlePageChange","page","size","startIndex","endIndex","paginatedData","slice","_jsxs","style","display","flexDirection","alignItems","children","_jsx","height","textAlign","linHeight","Table","dataSource","pagination","scroll","y","summary","Summary","Row","Pagination","current","total","length","onChange","margin"],"sourceRoot":""}