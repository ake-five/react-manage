{"version":3,"file":"react-manage/static/js/221.d3b83b15.chunk.js","mappings":"4KAIA,MA2DA,EA3DcA,KACV,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IAG/CK,EAAAA,EAAAA,YAAU,KAGuBC,WAmBzBJ,EAjBuB,CACnB,CAAEK,MAAO,OAAQC,UAAW,OAAQC,IAAK,QACzC,CAAEF,MAAO,MAAOC,UAAW,MAAOC,IAAK,OACvC,CAAEF,MAAO,UAAWC,UAAW,UAAWC,IAAK,aAenDV,EAVoB,CAChB,CAAEU,IAAK,IAAKC,GAAI,EAAGC,KAAM,WAAYC,IAAK,IAC1C,CAAEH,IAAK,IAAKC,GAAI,EAAGC,KAAM,MAAOC,IAAK,IACrC,CAAEH,IAAK,IAAKC,GAAI,EAAGC,KAAM,SAAUC,IAAK,IACxC,CAAEH,IAAK,IAAKC,GAAI,EAAGC,KAAM,SAAUC,IAAK,IACxC,CAAEH,IAAK,IAAKC,GAAI,EAAGC,KAAM,UAAWC,IAAK,KAKpB,EAG7BC,EAAsB,GACvB,IAMH,OACIC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWC,SAAA,EAC1FC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFP,MAAO,CAAEC,MAAO,QAChBf,QAASA,EACTsB,WAAYzB,EAAU0B,MAxCjB,GAwCwBrB,EAAc,GAxCtC,EAwCqDA,GAC1DsB,YAAY,KAEhBJ,EAAAA,EAAAA,KAAA,OAAKN,MAAO,CAAEW,UAAW,QAASN,UAC9BC,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CACPC,QAASzB,EACT0B,SA9CC,EA+CDC,MAAOhC,EAAUiC,OACjBC,SAjBUC,IACtB7B,EAAe6B,EAAK,QAmBd,C","sources":["pages/coms/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Pagination } from 'antd';\n\n\nconst About = () => {\n    const [tableData, setTableData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const pageSize = 5;\n\n    useEffect(() => {\n        // 模拟从后端获取动态表头和数据的异步操作\n        // 实际应用中，你需要替换下面的模拟数据为从后端获取的数据\n        const fetchDataFromBackend = async () => {\n            // 模拟从后端获取的动态表头数据\n            const dynamicColumns = [\n                { title: 'Name', dataIndex: 'name', key: 'name' },\n                { title: 'Age', dataIndex: 'age', key: 'age' },\n                { title: 'Address', dataIndex: 'address', key: 'address' },\n                // Add more dynamic columns as needed\n            ];\n\n            // 模拟从后端获取的数据\n            const dynamicData = [\n                { key: '1', id: 1, name: 'John Doe', age: 11 },\n                { key: '2', id: 2, name: 'asd', age: 11 },\n                { key: '3', id: 3, name: 'xzcsdf', age: 11 },\n                { key: '4', id: 4, name: 'fhhrth', age: 11 },\n                { key: '5', id: 4, name: 'terscs ', age: 11 },\n                // Add more dynamic data as needed\n            ];\n\n            setColumns(dynamicColumns);\n            setTableData(dynamicData);\n        };\n\n        fetchDataFromBackend();\n    }, []);\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <Table\n                style={{ width: '100%' }}\n                columns={columns}\n                dataSource={tableData.slice((currentPage - 1) * pageSize, currentPage * pageSize)}\n                pagination={false} // 禁用表格自带的分页器\n            />\n            <div style={{ marginTop: '16px' }}>\n                <Pagination\n                    current={currentPage}\n                    pageSize={pageSize}\n                    total={tableData.length}\n                    onChange={handlePageChange}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default About;"],"names":["About","tableData","setTableData","useState","columns","setColumns","currentPage","setCurrentPage","useEffect","async","title","dataIndex","key","id","name","age","fetchDataFromBackend","_jsxs","style","width","display","flexDirection","alignItems","children","_jsx","Table","dataSource","slice","pagination","marginTop","Pagination","current","pageSize","total","length","onChange","page"],"sourceRoot":""}